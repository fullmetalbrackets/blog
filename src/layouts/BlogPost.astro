---
import BaseLayout from "./BaseLayout.astro";
import { generateTagsData } from "../utils/tags";

export interface Props {
	content: {
		title: string;
		description: string;
		pubDate?: string;
		updatedDate?: string;
		tags?: string;
	};
}

const {
	content: { title, description, pubDate, updatedDate, tags },
} = Astro.props;
const allTagsData = generateTagsData(tags);
---
<BaseLayout title={title} description={description}>
	<head>
		<link rel="stylesheet" href="/prism.css">
	</head>
	<style>
		article {
			margin-top: 3.9em;
		}
		hr {
			margin: 1em 0 3em 0;
		}
		.title {
			margin: 1em 0;
			line-height: 40px;
		}
		.tags {
			display: flex;
			flex-wrap: wrap;
			list-style-type: none;
			margin: 0 auto;
			margin-top: 10px;
			padding: 0;
		}
		aside {
			display: flex;
			justify-content: space-between;
			cursor: pointer;
			margin: 2em auto 0 auto;
		}
		aside > a, a:active, a:visited, a:hover, a:focus {
			color: var(--name);
		}
		aside > a:hover, aside > a:focus {
			color: var(--name-hover);
		}
		form {
			margin-top: 4px;
		}
		label {
			color: var(--text);
			margin-right: 1em;
		}
		.top {
			font-size: 1.75rem;
			font-family: 'Streamster';
			font-weight: 700;
			margin-top: 8px;
			margin-right: 10px;
		}
		.radio {
			margin: 0.5em 0.5em 0 0.25em;
			width: 1em;
			height: 1em;
			appearance: none;
			-webkit-appearance: none;
			border: 1px solid var(--accent);
			background-color: var(--accent);
			border-radius: 50%;
		}
		.radio:focus, .radio:focus-visible {
			box-shadow: none;
			outline-offset: 0;
		}
		.radio:checked {
			box-shadow: 0 0 0 1px var(--primary);
			background-color: var(--primary);
			border-width: 0.1em;
		}
		.utterances {
			margin-top: 2em;
		}
		@media screen and (min-width: 200px) and (max-width: 650px) {
			article {
				padding-top: 0;
				margin-top: 3.75em;
			}
			a, a:active, a:visited, a:hover {
				font-size: 1em;
			}
			.top {
				margin-top: 1em;
				font-size: 1.5rem;
			}
			aside {
				font-size: 1rem;
			}
		}
	</style>

	<article data-pagefind-body>
		{pubDate && <time>{pubDate}</time>}
		{updatedDate && <div>Updated on <time>{updatedDate}</time></div>}
		<h1 class="title">{title}</h1>
		<ul class="tags">
			{allTagsData.map(tags => (
				<a href={`/tags/${tags.slug}`}><li class="button blog-tag">{tags.name}</li></a>
			))}
		</ul>
		<hr>
		<slot>
			<p>
				If you're seeing this, something went wrong! Please try <em>reloading the page</em>.
			</p>
		</slot>
	</article>
	<aside>
		<span>Was this article helpful? 
			<form name="feedback" method="POST" action="/feedback" data-netlify="true" netlify-honeypot="bot-field">
			<input value="feedback" name="feedback" type="hidden" />
			<input class="radio" type="radio" id="helpful" name="feedback" value="Helpful" required>
			<label for="helpful">Yes</label>
			<input class="radio" type="radio" id="not-helpful" name="feedback" value="Not Helpful">
			<label for="not-helpful" class="labels">No</label>
			<button class="button" type="submit" value="Submit">Submit</button>
			<input type="hidden" id="postId" name="postId" value={title} />
			</form>
		</span>
		<a href="#top" class="top">Back to Top</a>
	</aside>
	<div class="utterances">
		<script src="https://utteranc.es/client.js"
			repo="fullmetalbrackets/blog"
			issue-term="title"
			label="comment"
			theme="preferred-color-scheme"
			crossorigin="anonymous"
			async>
		</script>
	</div>
</BaseLayout>