---
import BaseLayout from '@layouts/BaseLayout.astro';

const posts = (await Astro.glob('./*.md')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const title = 'Blog'
const desc = 'List of all blog posts'
---

<style scoped>
	/* article {
		list-style-type: none;
		padding: 0;
		margin: 2em 0 4em 0;
	}
	article h1 {
		margin-top: 0.75em;
		color: var(--primary);
	}
	.blog-desc {
		color: var(--text);
		padding-bottom: 1em;
	}
	a button {
		background-color: var(--tags);
		color: #000;
		border-radius: 0.25em;
		cursor: pointer;
		font-weight: 600;
		padding: 4px 8px;
		text-decoration: none;
		text-overflow: ellipsis;
		-webkit-transition: all .10s ease-out;
		-moz-transition: all .10s ease-out;
		-o-transition: all .10s ease-out;
		transition: all .10s ease-out;
		margin: 0 8px 8px 0;
		font-family: 'M Plus Rounded 1c Med', Monaco, Consolas, 'Andale Mono', 'Ubuntu Mono', monospace;
	}
	@media (hover: hover) {
		a:hover button  {
			box-shadow: -4px -4px 0 #000;
			transform: translate(4px,4px);
		}
		a:hover button {
			outline-offset: 1px;
		}
	}
	@media (hover: none) {
		a:hover button {
			background-color: var(--menu);
		}
	}
	@media screen and (min-width: 200px) and (max-width: 667px) {
		main {
			margin: 0 10px;
		}
		ul {
			margin-top: 3em;
		}
		article h1 {
			margin-top: 0.9em;
			font-size: 1.3em;
		}
		a button, aside a {
			font-size: 0.85em;
		}
	} */
span {
  font-size: 110%;
}
p {
  margin-bottom: 3em;
}
.desc {
  font-size: 90%;
}
.posts-li {
  display: grid;
  grid-template-columns: 1fr 4fr;
  grid-template-rows: repeat();
  gap: 10px;
  margin: 0 auto 2em -2em;
  padding: 0 auto;
}
.posts-dates {  
  margin: 0;
  padding: 0;
  width: 5.75em;
  text-align: right;
}
.posts-title {
  width: auto;
  text-align: left;
}
.posts-title a, .posts-title a:active, .posts-title a:visited {
  color: var(--primary);
} 
.posts-title a:hover {
  color: var(--menu);
} 
.posts-bottom {
  margin: 4em auto 0 auto;
}
@media screen and (min-width: 200px) and (max-width: 667px) {
  .posts-li {
    display: flex;
    flex-direction: column;
    margin: 0 auto 2em -2em;
    padding: 0 auto;
  }
  .posts-dates {
    padding-top: 0.1em;
    font-size: 0.75em;
    width: 6.5em;
    text-align: left;
  }
}
</style>

<BaseLayout title={title} description={desc}>
	<section>
		<!-- <h1>{title}</h1>
    <hr>
		{posts.map((post) => (
		<a href={post.url}>
			<article>
				<time datetime={post.frontmatter.pubDate}>
					{new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
						year: 'numeric',
						month: 'long',
						day: 'numeric',
					})}
				</time>
				<h1>{post.frontmatter.title}</h1>
				<p class="blog-desc">{post.frontmatter.description}</p>
				<button>Read More</button>
			</article>
		</a>
		))} -->
		<h1>{title}</h1>
		<hr>
		{posts.map((post) => (
        <ul>
          <li class="posts-li">
            <div class="posts-dates">
              <time datetime={post.frontmatter.pubDate}>
                {new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
                  year: 'numeric',
                  month: 'numeric',
                  day: 'numeric',
                })}
              </time>
            </div>
            <div class="posts-title">
              <a href={post.url}>
                <span>{post.frontmatter.title}</span>
                <p class="desc">{post.frontmatter.description}</p>
              </a>
            </div>
          </li>
        </ul>
		))}
		<hr>
		<aside>
			<a href="#top" class="top button blog-tag">Back to Top &uarr;</a>
		</aside>
		</section>
</BaseLayout>