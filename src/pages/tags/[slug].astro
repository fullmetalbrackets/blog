---
import BaseLayout from '@layouts/BaseLayout.astro';
import { generateTagsData } from '@utils/tags';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../blog/*.{md,mdx}');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());
  const allTagsUnique = new Set();
  sortedPosts.map(post => {
    post.frontmatter.tags && post.frontmatter.tags.map(tag => {
      allTagsUnique.add(tag);
    })
  })
  const allTagsData = generateTagsData(allTagsUnique);
  return allTagsData.map((tag) => {
    const posts = sortedPosts.filter((post) => post.frontmatter.tags.includes(tag.name))
      return {
      params: {slug: tag.slug}, 
      props: {
        tag: tag.name, 
        posts: posts
      }
    };
  });
}
const {tag} = Astro.props;
const title = `${tag}`
const desc = 'Blog posts tagged ${tag}.'
const posts = (await Astro.glob('../blog/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf())
	.filter(post => tag && post.frontmatter.tags?.includes(tag));
---

<BaseLayout title={title} description={desc}>
	<style>
		article {
			list-style-type: none;
			padding: 0;
			margin: 2.1em auto 4em auto;
			line-height: 1.2;
		}
		article > .desc {
			font-size: 20px;
			padding-bottom: 1.25em;
		}
		hr {
			margin-top: 4em;
		}
		.tag-line {
			margin: 1.5em 0;
			opacity: 0.5;
		}
		h1 {
			margin: 0.8em auto 0 auto;
			line-height: 40px;
			font-size: 36px;
		}
		.title {
			margin: 2.25em 0 0.5em 0;
			color: var(--date);
		}
		.title span {
			color: var(--primary);
		}
		article > h1 {
			margin-bottom: 1em;
		}
		article > .bottom-line {
			opacity: 0;
		}
		a button {
			background-color: var(--tags);
			color: #000;
			border-radius: 0.25em;
			cursor: pointer;
			font-weight: 600;
			padding: 6px 8px;
			text-decoration: none;
			text-overflow: ellipsis;
			-webkit-transition: all .10s ease-out;
			-moz-transition: all .10s ease-out;
			-o-transition: all .10s ease-out;
			transition: all .10s ease-out;
			margin: 0.75em 8px 8px 0;
		}
		@media (hover: hover) {
			a:hover button  {
				box-shadow: -4px -4px 0 #000;
				transform: translate(4px,4px);
			}
			a:hover button {
				outline-offset: 1px;
			}
		}
		@media (hover: none) {
			a:hover button {
				background-color: var(--menu);
			}
		}
		@media screen and (min-width: 200px) and (max-width: 650px) {
			.title {
				margin-top: 1.575em;;
			}
			.title span::before {
				content: "\A";
				white-space: pre;
			}
		}
	</style>
	<section>
		<h1 class="title">Blog posts tagged <span>{title}</span></h1>
		<hr class="tag-line">
		{posts.map((post) => (
		<a href={post.url} rel="prefetch">
			<article>
				<time datetime={post.frontmatter.pubDate}>
					{new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
						year: 'numeric',
						month: 'long',
						day: 'numeric',
					})}
				</time>
				<h1>{post.frontmatter.title}</h1>
				<p class="desc">{post.frontmatter.description}</p>
				<button>Read More</button>
			</article>
		</a>
		))}
		<hr>
		<aside>
			<a href="#top" class="top button blog-tag">Back to Top &uarr;</a>
		</aside>
	</section>
</BaseLayout>