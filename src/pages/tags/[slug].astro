---
import BaseLayout from '@layouts/BaseLayout.astro';
import { generateTagsData } from '@utils/tags';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../*/*.{md,mdx}');
  const sortedPosts = allPosts.sort((a, b) => new Date(b.frontmatter.date).valueOf() - new Date(a.frontmatter.date).valueOf());
  const allTagsUnique = new Set();
  sortedPosts.map(post => {
    post.frontmatter.tags && post.frontmatter.tags.map(tag => {
      allTagsUnique.add(tag);
    })
  })
  const allTagsData = generateTagsData(allTagsUnique);
  return allTagsData.map((tag) => {
    const posts = sortedPosts.filter((post) => post.frontmatter.tags.includes(tag.name))
      return {
      params: {slug: tag.slug}, 
      props: {
        tag: tag.name, 
        posts: posts
      }
    };
  });
}
const {tag} = Astro.props;
const title = `${tag}`
const desc = 'Posts and Notes about ${tag}.'
const posts = (await Astro.glob('../*/*.{md,mdx}')).sort(
	(a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf())
	.filter(post => tag && post.frontmatter.tags?.includes(tag));
---

<BaseLayout title={title} description={desc}>
	<style>
		span {
			font-size: 110%;
		}
		p {
			margin-bottom: 3em;
		}
		.desc {
			font-size: 90%;
		}
		.posts-li {
			display: grid;
			grid-template-columns: 1fr 4fr;
			grid-template-rows: repeat();
			gap: 10px;
			margin: 0 auto 2em -2em;
			padding: 0 auto;
		}
		.posts-dates {  
			margin: 0;
			padding: 0;
			width: 5.75em;
			text-align: right;
		}
		.posts-title {
			width: auto;
			text-align: left;
		}
		.posts-title a, .posts-title a:active, .posts-title a:visited {
			color: var(--primary);
		} 
		.posts-title a:hover {
			color: var(--menu);
		} 
		.posts-bottom {
			margin: 4em auto 0 auto;
		}
		@media screen and (min-width: 200px) and (max-width: 667px) {
			.posts-li {
				display: flex;
				flex-direction: column;
				margin: 0 auto 2em -2em;
				padding: 0 auto;
			}
			.posts-dates {
				padding-top: 0.1em;
				font-size: 0.75em;
				width: 6.5em;
				text-align: left;
			}
		}
	</style>
	<section>
		<h1 class="title">Posts & Notes about <span>{title}</span></h1>
		<hr class="tag-line">
		{posts.map((post) => (
			<ul>
				<li class="posts-li">
					<div class="posts-dates">
						<time datetime={post.frontmatter.pubDate}>
							{new Date(post.frontmatter.pubDate).toLocaleDateString('en-us', {
								year: 'numeric',
								month: 'numeric',
								day: 'numeric',
							})}
						</time>
					</div>
					<div class="posts-title">
						<a href={post.url}>
							<span>{post.frontmatter.title}</span>
							<p class="desc">{post.frontmatter.description}</p>
						</a>
					</div>
				</li>
			</ul>
		))}
		<hr>
		<aside>
			<a href="#top" class="top button blog-tag">Back to Top &uarr;</a>
		</aside>
	</section>
</BaseLayout>