---
import { getCollection } from "astro:content";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<style scoped>
  h2 {
    margin-bottom: 0.3em;
    font-family: "M Plus Rounded 1c Reg";
  }
  span {
    line-height: 1.4;
  }
  .desc {
    line-height: 1.4;
  }
  ul {
    background-color: var(--blockquote);
    border-radius: 0.5em;
    margin: 0.5em auto 0 auto;
    padding: 1.5em 1.5em 1em 1.5em;
    border: 2px solid var(--primary);
  }
  li {
    display: inline-flex;
    flex-direction: column;
    margin: 0 auto 1em auto;
    padding-bottom: 0.5em;
    line-height: 1.2;
    border-bottom: 2px solid transparent;
  }
  li:last-of-type {
    margin: 0 auto;
    padding: auto;
  }
  .posts-title {
    display: inline-flex;
    flex-direction: row;
    margin: 0.25em auto;
  }
  .posts-title a,
  .posts-title a:active,
  .posts-title a:visited {
    color: var(--primary);
  }
  .posts-title a:hover {
    color: var(--menu);
  }
  li:hover {
    padding-bottom: 0.5em;
    border-bottom: 2px solid var(--hover);
  }
  @media (hover: hover) {
    a:hover button {
      box-shadow: -4px -4px 0 #000;
      transform: translate(4px, 4px);
    }
    a:hover button {
      outline-offset: 1px;
    }
  }
  @media (hover: none) {
    a:hover button {
      background-color: var(--menu);
    }
  }
  @media screen and (min-width: 200px) and (max-width: 667px) {
    main {
      margin: 0 10px;
    }
    ul {
      padding: 1em 0.75em 0.5em 0.75em;
      width: 100%;
      margin: 0;
    }
  }
</style>

<section>
  <h2>Featured Articles</h2>
  <ul>
        <li>
      <a href="/blog/reverse-proxy-using-nginx-adguardhome-cloudflare/" rel="prefetch-intent" data-umami-event="featured-proxy-adguard">
      <p class="posts-title">Setting up a reverse proxy for HTTPS with a custom domain using Nginx Proxy Manager, AdGuard Home and Cloudflare</p>
      <p class="desc">
        I've used a reverse proxy to access my self-hosted apps and services for years, and used Pi-Hole as my home network DNS for even longer, but recently switched to AdGuard Home. That meant redoing all my DNS records within AdGuard so I could get my reverse proxy back up and running, and I decided to write down the steps I took. When done, we'll be able to access our apps and services through a custom domain, with unique sub-domains for each app or service, with full HTTPS and accessible only locally.
      </p>
      </a>
    </li>
    <li>
      <a href="/blog/expose-plex-tailscale-vps/" rel="prefetch-intent" data-umami-event="featured-expose-plex-tailscale">
      <p class="posts-title">How to securely expose Plex from behind CGNAT using Tailscale and a free Oracle VM
      </p>
      <p class="desc">
        I wrote before about securely exposing Plex for external access, but my previous solution relied on Cloudflare Tunnel and it was technically against their TOS. So I switched to using a Oracle VM on their free-tier, connecting it to my home network with Tailscale, and exposing Plex via reverse proxy. It works like a charm!
      </p>
      </a>
    </li>
    <li>
      <a href="/blog/comprehensive-guide-tailscale-securely-access-home-network/" rel="prefetch-intent" data-umami-event="featured-tailscale-guide">
      <p class="posts-title">Comprehensive guide to setting up Tailscale to securely access your home network from anywhere</p>
      <p class="desc">
        Accessing self-hosted services from outside the home can be a challenge, especially when dealing with CGNAT and having to forward ports from the router. It can be complex to manage and potentially dangerous to your home network's privacy and security if not done right, but Tailscale makes it easy to set up encrypted peer-to-peer connections between devices across different networks. In this guide I will explain how I use Tailscale as a VPN for secure remote access to my home network.
      </p>
      </a>
    </li>
    <li>
      <a href="/blog/xplore-android-smb-share/" rel="prefetch-intent" data-umami-event="featured-xplore-android-smb-share">
      <p class="posts-title">Setup X-plore File Manager on Android to transfer files to an SMB share</p>
      <p class="desc">
        I've wrote before about file managers for Android before, recently I found X-plore which makes it very easy to transfer files back and forth between Android and SMB network shares, once you understand how the UI works. Here's to connect X-plore to an SMB network share so you can transfer files between devices.
      </p>
      </a>
    </li>
    <li>
      <a href="/blog/two-drives-merger-fs/" rel="prefetch-intent" data-umami-event="featured-two-drives-mergerfs">
      <p class="posts-title">Using MergerFS to combine multiple hard drives into one unified media storage</p>
      <p class="desc">
        My situation was simple -- my server's media storage was filling up and I wanted to add more drives, but without having to keep track of which drive specific files were for Plex. How to pool multiple hard drives together when they're all different brands, models and capacities? Enter mergerfs, an open source union filesystem that essentially merges multiple drives into one mount point.
      </p>
      </a>
    </li>

  </ul>
</section>
